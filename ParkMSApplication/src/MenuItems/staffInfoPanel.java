package MenuItems;

import AddButtonItems.addStaffInfoPanel;
import Mainpackage.*;
import SearchButtonItems.*;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import QueryInfo.*;

class staffInfoModel {

    private int staff_id, staff_age, staff_salary;

    public staffInfoModel(int staff_salary) {
        this.staff_salary = staff_salary;
    }
    private String staff_name, staff_phone, staff_gender, staff_address, staff_designation, staff_hiredate, region_no;

    public staffInfoModel(int staff_id, String staff_name, String staff_phone, String staff_gender, int staff_age, String staff_address, String staff_designation, int staff_salary, String staff_hiredate, String region_no) {
        this.staff_id = staff_id;
        this.staff_age = staff_age;
        this.staff_name = staff_name;
        this.staff_phone = staff_phone;
        this.staff_gender = staff_gender;
        this.staff_address = staff_address;
        this.staff_designation = staff_designation;
        this.staff_salary = staff_salary;
        this.staff_hiredate = staff_hiredate;
        this.region_no = region_no;

    }

    public int getStaff_id() {
        return staff_id;
    }

    public int getStaff_age() {
        return staff_age;
    }

    public String getStaff_name() {
        return staff_name;
    }

    public String getStaff_phone() {
        return staff_phone;
    }

    public String getStaff_gender() {
        return staff_gender;
    }

    public String getStaff_address() {
        return staff_address;
    }

    public String getStaff_designation() {
        return staff_designation;
    }

    public int getStaff_salary() {
        return staff_salary;
    }

    public String getStaff_hiredate() {
        return staff_hiredate;
    }

    public String getRegion_no() {
        return region_no;
    }

}

public class staffInfoPanel extends javax.swing.JPanel {

    private String queryString = " SELECT Staff_info.staff_id,Staff_info.staff_name,Staff_info.staff_phone,Staff_info.staff_gender,Staff_info.staff_age,Staff_info.staff_address,Staff_info.staff_designation, Payout_Amount.staff_salary,Staff_info.staff_hiredate,Staff_info.region_no FROM Staff_info INNER JOIN Payout_Amount ON Staff_info.staff_designation=Payout_Amount.staff_designation";

    private ArrayList<staffInfoModel> staffList(String qString) {
        ArrayList<  staffInfoModel> staffList = new ArrayList<>();
        DatabaseConnection dbc = new DatabaseConnection();
        try {

            ResultSet rs = dbc.resultSetQuery(qString);

            staffInfoModel staff;
            while (rs.next()) {
                staff = new staffInfoModel(rs.getInt("staff_id"), rs.getString("staff_name"), rs.getString("staff_phone"), rs.getString("staff_gender"), rs.getInt("staff_age"), rs.getString("staff_address"), rs.getString("staff_designation"), rs.getInt("staff_salary"), rs.getString("staff_hiredate"), rs.getString("region_no"));
                staffList.add(staff);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
            e.printStackTrace();
        }

        //closing database
        dbc.dbClose();

        return staffList;
    }

    private void show_staffInfo(String qString) {
        ArrayList< staffInfoModel> list = staffList(qString);
        DefaultTableModel model = (DefaultTableModel) dataTable.getModel();
        Object[] row = new Object[10];
        for (int i = 0; i < list.size(); i++) {

            row[0] = list.get(i).getStaff_id();
            row[1] = list.get(i).getStaff_name();
            row[2] = list.get(i).getStaff_phone();
            row[3] = list.get(i).getStaff_gender();
            row[4] = list.get(i).getStaff_age();
            row[5] = list.get(i).getStaff_address();
            row[6] = list.get(i).getStaff_designation();
            row[7] = list.get(i).getStaff_salary();
            row[8] = list.get(i).getStaff_hiredate();
            row[9] = list.get(i).getRegion_no();

            model.addRow(row);
        }
    }

    public staffInfoPanel() {
        initComponents();
        show_staffInfo(queryString);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        contentPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        tableScrollPanel = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        addButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        searchCategoryField = new javax.swing.JComboBox<>();
        searchButton = new javax.swing.JButton();
        searchValueField = new javax.swing.JTextField();
        infoButton = new javax.swing.JButton();

        jButton1.setText("jButton1");

        setBackground(new java.awt.Color(102, 255, 51));
        setMaximumSize(new java.awt.Dimension(530, 500));
        setMinimumSize(new java.awt.Dimension(530, 500));
        setPreferredSize(new java.awt.Dimension(530, 500));
        setLayout(new java.awt.GridBagLayout());

        contentPanel.setBackground(new java.awt.Color(255, 255, 255));
        contentPanel.setMaximumSize(new java.awt.Dimension(530, 500));
        contentPanel.setMinimumSize(new java.awt.Dimension(530, 500));
        contentPanel.setPreferredSize(new java.awt.Dimension(530, 500));
        contentPanel.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(65, 40, 107));
        jPanel1.setLayout(null);
        contentPanel.add(jPanel1);
        jPanel1.setBounds(10, 10, 510, 10);

        jLabel1.setFont(new java.awt.Font("Gadugi", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Staff's Information");
        contentPanel.add(jLabel1);
        jLabel1.setBounds(10, 30, 510, 30);

        jPanel2.setBackground(new java.awt.Color(65, 40, 107));
        jPanel2.setLayout(null);
        contentPanel.add(jPanel2);
        jPanel2.setBounds(10, 70, 510, 10);

        jPanel3.setBackground(new java.awt.Color(65, 40, 107));
        jPanel3.setLayout(null);
        contentPanel.add(jPanel3);
        jPanel3.setBounds(400, 30, 120, 30);

        jPanel4.setBackground(new java.awt.Color(65, 40, 107));
        jPanel4.setLayout(null);
        contentPanel.add(jPanel4);
        jPanel4.setBounds(10, 30, 120, 30);

        tableScrollPanel.setBackground(new java.awt.Color(255, 255, 255));
        tableScrollPanel.setForeground(new java.awt.Color(255, 255, 255));

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Phone", "Sex", "Age", "Address", "Designation", "Salary", "Hire Date", "Region"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableScrollPanel.setViewportView(dataTable);

        contentPanel.add(tableScrollPanel);
        tableScrollPanel.setBounds(10, 90, 510, 300);

        addButton.setBackground(new java.awt.Color(65, 40, 107));
        addButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        addButton.setForeground(new java.awt.Color(255, 255, 255));
        addButton.setText("ADD");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        contentPanel.add(addButton);
        addButton.setBounds(350, 440, 70, 25);

        deleteButton.setBackground(new java.awt.Color(65, 40, 107));
        deleteButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("DELETE");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });
        contentPanel.add(deleteButton);
        deleteButton.setBounds(430, 440, 90, 25);

        jLabel2.setFont(new java.awt.Font("Gadugi", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Search By:");
        contentPanel.add(jLabel2);
        jLabel2.setBounds(10, 390, 110, 40);

        searchCategoryField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        searchCategoryField.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-" }));
        contentPanel.add(searchCategoryField);
        searchCategoryField.setBounds(120, 400, 110, 30);

        searchButton.setBackground(new java.awt.Color(65, 40, 107));
        searchButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        searchButton.setForeground(new java.awt.Color(255, 255, 255));
        searchButton.setText("SEARCH");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        contentPanel.add(searchButton);
        searchButton.setBounds(240, 440, 90, 25);

        searchValueField.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        contentPanel.add(searchValueField);
        searchValueField.setBounds(30, 440, 200, 30);

        infoButton.setBackground(new java.awt.Color(51, 0, 102));
        infoButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        infoButton.setForeground(new java.awt.Color(255, 255, 255));
        infoButton.setText("Information");
        infoButton.setActionCommand("");
        infoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoButtonActionPerformed(evt);
            }
        });
        contentPanel.add(infoButton);
        infoButton.setBounds(350, 400, 170, 25);

        add(contentPanel, new java.awt.GridBagConstraints());
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        //This will bring the frame which was implemented for add button into the screen in Nimbus look 
        String[] args = null;
        new addStaffInfoPanel().main(args);
    }//GEN-LAST:event_addButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed

        int column = 0;
        int row = dataTable.getSelectedRow();
        String primKey = dataTable.getModel().getValueAt(row, column).toString();

        //preparing query string for delete
        String delQueryString = "DELETE FROM Staff_info WHERE staff_id = '" + primKey + "'";

        //connecting db and then deleting the row according to primary key
        DatabaseConnection dbc = new DatabaseConnection();
        try {
            PreparedStatement pst = dbc.preparedStatementQuery(delQueryString);
            pst.executeUpdate();
            JOptionPane.showMessageDialog(null, "Deleted successfully");
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
        dbc.dbClose();

    }//GEN-LAST:event_deleteButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchButtonActionPerformed

    private void infoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoButtonActionPerformed
       
        
        /*queryStaffInfoPanel ob = new queryStaffInfoPanel(queryString);
            
         ob.setQueryString(queryString); 
         String[] args = null;
        // ob.setvisible(true);*/
        //queryStaffInfoPanel ob = new queryStaffInfoPanel(queryString);
            
        
         String[] args = null;
        // ob.setvisible(true);
        
         queryStaffInfoPanel.main(queryString);
        
        
        
        
         
    }//GEN-LAST:event_infoButtonActionPerformed

    public void setQueryString(String queryString) {
        this.queryString = queryString;
        
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JTable dataTable;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton infoButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton searchButton;
    private javax.swing.JComboBox<String> searchCategoryField;
    private javax.swing.JTextField searchValueField;
    private javax.swing.JScrollPane tableScrollPanel;
    // End of variables declaration//GEN-END:variables
}
