package MenuItems;
import AddButtonItems.addVisitorFeedbackPanel;
import Mainpackage.*;
import SearchButtonItems.*;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

class visitorFeedbackModel{
    private int  feedback_sl_no,visitor_id;
    private String feedback_time,visitor_rating,comments;

    public visitorFeedbackModel(int feedback_sl_no,int visitor_id, String feedback_time, String visitor_rating, String comments) {
        this.feedback_sl_no = feedback_sl_no;
        this.visitor_id = visitor_id;
        this.feedback_time = feedback_time;
        this.visitor_rating = visitor_rating;
        this.comments = comments;
    }

    public int getFeedback_sl_no() {
        return feedback_sl_no;
    }

   
    public int getVisitor_id() {
        return visitor_id;
    }

    public String getFeedback_time() {
        return feedback_time;
    }

    public String getVisitor_rating() {
        return visitor_rating;
    }

    public String getComments() {
        return comments;
    }
    
    

}


public class visitorFeedbackPanel extends javax.swing.JPanel {

    private String queryString = "SELECT * FROM Feedback";
    
    private ArrayList< visitorFeedbackModel>  visitorFeedback(String qString) {
        ArrayList< visitorFeedbackModel>  visitorFeedback = new ArrayList<>();
        DatabaseConnection dbc = new DatabaseConnection();
        try {

            ResultSet rs = dbc.resultSetQuery(qString);

             visitorFeedbackModel feedback;
            while (rs.next()) {
                 feedback = new  visitorFeedbackModel(rs.getInt("feedback_sl_no"),rs.getInt("visitor_id"),rs.getString("feedback_time"), rs.getString("visitor_rating"), rs.getString("comments"));
                 visitorFeedback.add(feedback);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
            e.printStackTrace();
        }

        //closing database
        dbc.dbClose();

        return  visitorFeedback;
    }
    private void show_parkingInfo(String qString) {
        ArrayList< visitorFeedbackModel> list =  visitorFeedback(qString);
        DefaultTableModel model = (DefaultTableModel) dataTable.getModel();
        Object[] row = new Object[5];
        for (int i = 0; i < list.size(); i++) {
            
            row[0] = list.get(i).getFeedback_sl_no(); 
            row[1] = list.get(i).getVisitor_id(); 
            row[2] = list.get(i).getFeedback_time();
            row[3] = list.get(i).getVisitor_rating();
            row[4] = list.get(i).getComments();
            

            model.addRow(row);
        }
    }
    
    
    
    
    public visitorFeedbackPanel() {
        initComponents();
        
         show_parkingInfo(queryString);
    }    

    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        contentPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        tableScrollPanel = new javax.swing.JScrollPane();
        dataTable = new javax.swing.JTable();
        addButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(102, 255, 51));
        setMaximumSize(new java.awt.Dimension(530, 500));
        setMinimumSize(new java.awt.Dimension(530, 500));
        setPreferredSize(new java.awt.Dimension(530, 500));
        setLayout(new java.awt.GridBagLayout());

        contentPanel.setBackground(new java.awt.Color(255, 255, 255));
        contentPanel.setMaximumSize(new java.awt.Dimension(530, 500));
        contentPanel.setMinimumSize(new java.awt.Dimension(530, 500));
        contentPanel.setPreferredSize(new java.awt.Dimension(530, 500));
        contentPanel.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(65, 40, 107));
        jPanel1.setLayout(null);
        contentPanel.add(jPanel1);
        jPanel1.setBounds(10, 10, 510, 10);

        jLabel1.setFont(new java.awt.Font("Gadugi", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Visitor's Feedback");
        contentPanel.add(jLabel1);
        jLabel1.setBounds(10, 30, 510, 30);

        jPanel2.setBackground(new java.awt.Color(65, 40, 107));
        jPanel2.setLayout(null);
        contentPanel.add(jPanel2);
        jPanel2.setBounds(10, 70, 510, 10);

        jPanel3.setBackground(new java.awt.Color(65, 40, 107));
        jPanel3.setLayout(null);
        contentPanel.add(jPanel3);
        jPanel3.setBounds(390, 30, 130, 30);

        jPanel4.setBackground(new java.awt.Color(65, 40, 107));
        jPanel4.setLayout(null);
        contentPanel.add(jPanel4);
        jPanel4.setBounds(10, 30, 130, 30);

        tableScrollPanel.setBackground(new java.awt.Color(255, 255, 255));
        tableScrollPanel.setForeground(new java.awt.Color(255, 255, 255));

        dataTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Sl. No", "Visitor ID", "Time", "Rating", "Comment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tableScrollPanel.setViewportView(dataTable);

        contentPanel.add(tableScrollPanel);
        tableScrollPanel.setBounds(10, 90, 510, 300);

        addButton.setBackground(new java.awt.Color(65, 40, 107));
        addButton.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        addButton.setForeground(new java.awt.Color(255, 255, 255));
        addButton.setText("ADD");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });
        contentPanel.add(addButton);
        addButton.setBounds(410, 440, 110, 33);

        add(contentPanel, new java.awt.GridBagConstraints());
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
        //This will bring the frame which was implemented for add button into the screen in Nimbus look 
        String[] args = null;
        new addVisitorFeedbackPanel().main(args);
    }//GEN-LAST:event_addButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addButton;
    private javax.swing.JPanel contentPanel;
    private javax.swing.JTable dataTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane tableScrollPanel;
    // End of variables declaration//GEN-END:variables
}
